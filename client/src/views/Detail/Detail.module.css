body, html {
    margin: 0;
    padding: 0;
}
.mainContainer {
    background-image: url('/Users/macbook/Desktop/HENRY/PROYECTO INDIVIDUAL/PI-Dogs-main/client/src/utils/IMAGES/image-from-rawpixel-id-10172802-jpeg.jpeg');
    background-size:auto;
    min-height: 100vh;
    align-items: center;
    text-align: center;
    padding-right: 7em;
    /* height: 100vh; */
    /* width: 100vw; */
    display: flex;
    justify-content: center;
    /* overflow-x: hidden; */
    /* background-image: url('/Users/macbook/Desktop/HENRY/PROYECTO INDIVIDUAL/PI-Dogs-main/client/src/views/Detail/image-from-rawpixel-id-10172802-jpeg.jpeg'); */
    /* background-size:auto; */
}


  @import url('https://fonts.googleapis.com/css2?family=Abril+Fatface&display=swap'); 
@import url('https://fonts.googleapis.com/css?family=Shadows+Into+Light&display=swap');

/* Defining the theme for the card: colors, fonts, spacing. 
This uses CSS variables - so you only have to change the colors in one place */ 
:root {
  /* The color for your card background and background pattern */ 
  --background: #F3F0D7;
  --background-decor: #DBD0C0;
  

  /* Colors for the elements on your card */ 
  --banner-bg: #1C0C5B;
  --banner-txt: white;

  /* Message area colors */ 
  --message-bg: #F1EDE9;
  --message-line: #94ACD4;
  --message-txt: #333333;

  /* Fonts */ 
  --font-banner: 'Abril Fatface', cursive;
  --font-text: 'Bradley Hand';

  /* Space and other details */
  --space: 16px;
  --space-xsm: 4px;
  --space-sm: 8px;
  --space-lg: 24px;
  --space-xlg: 48px;
}

/* Base template configurations */ 
/* body {
 
} */

.dogCard {
  max-width: 600px;
  height: 100%;
  padding-top: 0.5rem;
  margin-top: 2em;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  /* position: relative; */
  /* background color - here we are using the variable we created earlier! */ 
  background-color: var(--background);

  /* background pattern - remove the lines below and paste the new code if you want to use a different style */ 
  background-image: radial-gradient(var(--background-decor) 20%, transparent 0), radial-gradient(var(--background-decor) 20%, transparent 0); 
  background-size: 30px 30px;
  background-position: 0 0, 15px 15px;
  margin-right: 10em;
}

.dogPic {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 350px;
  height: 300px;
  padding: var(--space-sm) var(--space-sm) var(--space-xlg);
  background: white;
  border-radius: 4px;
  box-shadow: var(--space-xsm) var(--space-xsm) 15px rgba(0,0,0, .15);

  /* Edit the Translate property below to adjust the position of your picture */ 
  transform: rotate(5deg) translate(20px, 45px);
}

.dogPic img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.decorContainer {
  position: relative;
}

.dogBanner {
  display: flex;
  flex-direction: column;
  align-items: baseline;
  font-size: 40px;
  z-index: 1;

  /* Play around with those properties to change your banner styling */ 
  color: var(--banner-txt);
  font-family: Arial, Helvetica, sans-serif;
  text-transform: uppercase;
  transform: rotate(-5deg);
  gap: var(--space-sm) 0;
  -webkit-background-clip: text; 
-moz-background-clip: text; 
background-clip: text;
text-shadow: 0px 3px 3px rgba(255,255,255,0.4),0px -1px 1px rgba(0,0,0,0.3);
}

.dogBanner span {
    background-image: linear-gradient(to right top, #470c81, #4e249a, #5437b3, #574bcd, #585ee8);
  padding: var(--space) var(--space-lg);
  flex-grow: 0;
  border-radius: 2em;
}

.dogBanner span:nth-child(2) {
  margin-left: var(--space-lg);
}


.detailContainer {
  max-width: 80%;
  padding: 35px var(--space);
  font-family: var(--font-text);
  font-size: 25px;
  font-weight: 600;
  line-height: 32px;
  color: var(--message-txt);
  background-color: var(--message-bg);
  bottom: 0;

  background: repeating-linear-gradient(var(--message-bg), var(--message-bg) 31px, var(--message-line) 31px, var(--message-line) 32px);
  box-shadow: var(--space-xsm) var(--space-xsm) 15px rgba(0,0,0, .15);
}
/* End - Paper */

/* Block right */
.detailContainer block--right {
  position: relative;
}

.detailContainer block--right::before {
  content: "";
  width: 100vw;
  height: 100%;
  position: absolute;
  right: 0;
  top: 0;
  bottom: 0;
  background: var(--paper);
  z-index: -1;
}
/* End - Block right */

/* Block left */
.detailContainer block--left {
  position: relative;
}

.detailContainer block--left::before {
  content: "";
  width: 100vw;
  height: 100%;
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
  background: var(--paper);
  z-index: -1;
}
/* End - Block left */


.dogDecorRight {
  /* Emojis are text - so here we are setting a font-size to make them bigger */ 
  font-size: 76px;
  position: absolute;
  bottom: -50px;
  right: -50px;
  z-index: 1;
  animation-name: float;
  animation-duration: 1.9s;
  animation-iteration-count: infinite;
}

/* Positioning for the emojis - play around with the values to change the placement of your decorations */ 


.dogDecorLeft {
    font-size: 96px;
  position:absolute;
  bottom: 0px;
  left: -50px;
  animation-name: spin;
  animation-duration: 3s;
  animation-iteration-count: infinite;
  animation-timing-function: linear; 
}

.dogDecorBottom {
  position: absolute; 
  right: 7.5em;
  font-size: 76px;
  bottom: -10px;
  animation-name: zoom-left-in-out;
  animation-duration: 1.75s;
  animation-iteration-count: infinite;
  transform-origin: left bottom;
}


/* Here we specify what will change on the element when they animate */ 
@keyframes zoom-left-in-out {
  /* Animation will start and end with the same settings */ 
  0%, 100% {
    transform: scale(0.95) rotate(2deg);
  }

  /* Animation will reach those settings 50% into the duration time we set on the declaration */
  50% {
    transform: scale(1) rotate(-2deg);
  }
}

/* pulse */ 
.pulse {
  animation-name: pulse;
  animation-duration: 1.3s;
  animation-iteration-count: infinite;
}

@keyframes pulse {
  0%, 100% {
    transform: scale(0.9);
  }

  50% {
    transform: scale(1);
  }
}


@keyframes float {
  0%, 100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(10px);
  }
}


@keyframes spin {
  from {
    transform: rotate(0);
  }
  to {
    transform: rotate(360deg);
  }
}
/* spin - End */
